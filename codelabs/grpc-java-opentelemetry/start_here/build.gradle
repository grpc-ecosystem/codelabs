plugins {
    // Provide convenience executables for trying out the codelabs.
    id 'application'
    id 'com.google.protobuf' version '0.9.4'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/maven2/"
    }
    mavenCentral()
    mavenLocal()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

def grpcVersion = '1.66.0' // CURRENT_GRPC_VERSION
def protocVersion = '3.25.3'
def openTelemetryVersion = '1.40.0'
def openTelemetryPrometheusVersion = '1.40.0-alpha'

dependencies {
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-opentelemetry:${grpcVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-sdk-metrics:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-logging:${openTelemetryVersion}"
    implementation "io.opentelemetry:opentelemetry-exporter-prometheus:${openTelemetryPrometheusVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

startScripts.enabled = false

task OpenTelemetryHelloWorldServer(type: CreateStartScripts) {
    mainClass = 'io.grpc.codelabs.opentelemetry.OpenTelemetryServer'
    applicationName = 'opentelemetry-server'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task OpenTelemetryHelloWorldClient(type: CreateStartScripts) {
    mainClass = 'io.grpc.codelabs.opentelemetry.OpenTelemetryClient'
    applicationName = 'opentelemetry-client'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

application {
    applicationDistribution.into('bin') {
        from(OpenTelemetryHelloWorldServer)
        from(OpenTelemetryHelloWorldClient)
        filePermissions {
            unix(0755)
        }
    }
}
